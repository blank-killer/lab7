#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 5

int queue[MAX_SIZE];
int front = -1;
int rear = -1;

int isFull()
{
    if ((front == 0 && rear == MAX_SIZE - 1) || (rear == front - 1))
        return 1;
    return 0;
}

int isEmpty()
{
    if (front == -1)
        return 1;
    return 0;
}

void enqueue(int item)
{
    if (isFull())
    {
        printf("Queue is full. Enqueue operation failed.\n");
        return;
    }
    if (front == -1)
        front = 0;
    rear = (rear + 1) % MAX_SIZE;
    queue[rear] = item;
    printf("Item %d enqueued successfully.\n", item);
}

int dequeue()
{
    if (isEmpty())
    {
        printf("Queue is empty. Dequeue operation failed.\n");
        return -1;
    }
    int item = queue[front];
    if (front == rear)
    {
        front = -1;
        rear = -1;
    }
    else
    {
        front = (front + 1) % MAX_SIZE;
    }
    return item;
}

void traverse()
{
    if (isEmpty())
    {
        printf("Queue is empty.\n");
        return;
    }
    printf("Queue elements: ");
    int i = front;
    while (i != rear)
    {
        printf("%d ", queue[i]);
        i = (i + 1) % MAX_SIZE;
    }
    printf("%d\n", queue[rear]);
}

int main()
{
    int choice, item;
    while (1)
    {
        printf("\nCircular Queue Operations\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Traverse\n");
        printf("4. Is Empty\n");
        printf("5. Is Full\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            printf("Enter the item to enqueue: ");
            scanf("%d", &item);
            enqueue(item);
            break;
        case 2:
            item = dequeue();
            if (item != -1)
                printf("Dequeued item: %d\n", item);
            break;
        case 3:
            traverse();
            break;
        case 4:
            if (isEmpty())
                printf("Queue is empty.\n");
            else
                printf("Queue is not empty.\n");
            break;
        case 5:
            if (isFull())
                printf("Queue is full.\n");
            else
                printf("Queue is not full.\n");
            break;
        case 6:
            printf("Exiting program.\n");
            exit(0);
        default:
            printf("Invalid choice. Please enter a valid option.\n");
        }
    }

    return 0;
}
